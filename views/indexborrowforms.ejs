<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <link rel="icon" href="./assets/DLSUDLOGO.png" type="image/x-icon">
  <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
  <title>Asset Borrowing Form</title>
  <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css">
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-datepicker@1.9.0/dist/css/bootstrap-datepicker.min.css">
  <style>
    body {
      background: url('assets/ictc.png') no-repeat center center fixed;
      background-size: cover;
      margin: 0;
    }

    .back-btn {
      position: absolute;
      top: 10px;
      left: 10px;
      background: none;
      border: none;
      font-size: 24px;
      color: #fff;
      cursor: pointer;
    }

    .form-container {
      background-color: white;
      padding: 20px;
      border-radius: 10px;
      margin-top: 50px;
      box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
    }

    .btn-send {
      background-color: #28a745;
      color: #fff;
    }

    @keyframes fadeIn {
      from { opacity: 0; }
      to { opacity: 1; }
    }

    .animated {
      animation: fadeIn 1s ease-in-out;
    }

    .container-box {
    background-color: white;
    padding: 20px;
    border-radius: 10px;
    box-shadow: 0 0 10px rgba(0, 0, 0, 0.2);
    margin: 20px; /* Adjusted margin */
}

#successMessage {
    display: none;
    margin-top: 10px; /* Adjusted margin */
}

#errorMessage {
    display: none;
    margin-top: 10px; /* Adjusted margin */
}

  </style>
</head>
<body>

  <button class="back-btn" onclick="goBack()">&#9665;</button>

  <div class="container">
    <div class="row justify-content-center">
      <div class="col-md-6 form-container animated">
        <h2 class="text-center text-black">Asset Borrowing Form</h2>
        <form id="borrowForm" action="/indexborrowforms" method="post">
          <div class="form-group">
            <label for="name">Name:</label>
            <input type="text" id="name" name="name" class="form-control" value="<%= user.name %>" required readonly>
          </div>
          
          <div class="form-group">
            <label for="email">Email:</label>
            <input type="email" id="email" name="email" class="form-control" value="<%= user.email %>" required readonly>
          </div>
          
          <div class="form-group">
            <label for="usernum">User ID:</label>
            <input type="text" id="usernum" name="usernum" class="form-control" value="<%= user.usernum %>" required readonly>
          </div>
          
          <div class="form-group">
            <label for="barcode">Barcode:</label>
            <input type="text" id="barcode" name="barcode" class="form-control" required onchange="fetchItemDescription()">
        </div>
        

          <div class="form-group">
              <label for="item_description">Item Description:</label>
              <input type="text" id="item_description" name="item_description" class="form-control" readonly required>
          </div>

          <div class="form-group">
            <label for="borrow_date">Borrow date</label>
            <input type="date" class="form-control" id="borrow_date" readonly>
          </div>

          <div class="form-group">
            <label for="return_date">Return date</label>
            <input type="date" class="form-control" id="return_date" readonly>
          </div>

          <button type="button" class="btn btn-send btn-block" onclick="submitForm()">Send</button>
          <div id="successMessage" class="alert alert-success" role="alert" style="display: none;">
            Asset stored successfully.
        </div>
        </form>
      </div>
    </div>
  </div>

  <script src="https://code.jquery.com/jquery-3.5.1.slim.min.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.0.7/dist/umd/popper.min.js"></script>
  <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/bootstrap-datepicker@1.9.0/dist/js/bootstrap-datepicker.min.js"></script>
  <script>
    function submitForm() {
        const borrowForm = document.getElementById("borrowForm");

        const name = document.getElementById("name").value;
        const email = document.getElementById("email").value;
        const usernum = document.getElementById("usernum").value;
        const item_description = document.getElementById("item_description").value;
        const barcode = document.getElementById("barcode").value;
        const borrow_date = document.getElementById("borrow_date").value;
        const return_date = document.getElementById("return_date").value;

        fetch("/indexborrowforms", {
            method: "POST",
            headers: {
                "Content-Type": "application/json",
            },
            body: JSON.stringify({ name, email, usernum, item_description, barcode, borrow_date, return_date }),
        })
            .then(response => {
                if (response.ok) {
                    console.log("Success");
                    return response.json();
                } else {
                    console.error("Failed to submit asset:", response.status);
                    return Promise.reject("Failed to submit asset.");
                }
            })
            .then(data => {
                // Display the success message
                const successMessage = document.getElementById("successMessage");
                successMessage.style.display = "block";
                successMessage.style.opacity = "1";

                // Hide the success message after 4 seconds
                setTimeout(function () {
                    successMessage.style.opacity = "0";
                    setTimeout(function () {
                        successMessage.style.display = "none";

                        // Reset the form after the success message disappears
                        borrowForm.reset();
                        setDefaultDateValues(); // Reset date values after submission
                    }, 300); // Adjust this time to match your transition duration
                }, 4000);

                document.getElementById("notification").textContent = "";
            })
            .catch(error => {
                console.error("Error during asset submission:", error);
                document.getElementById("notification").textContent = "Failed to submit asset.";
            });
    }

    function goBack() {
        window.history.back();
    }

    document.addEventListener("DOMContentLoaded", function () {
        const borrowForm = document.getElementById("borrowForm");
        const submitButton = document.querySelector(".btn-send");
        const resetButton = document.getElementById("resetButton");

        function setDefaultDateValues() {
            const currentDate = new Date();
            const formattedDate = currentDate.toISOString().split('T')[0];
            document.getElementById("borrow_date").value = formattedDate;
            document.getElementById("return_date").value = formattedDate;
        }

        setDefaultDateValues();

        if (borrowForm && submitButton && resetButton) {
            borrowForm.addEventListener("submit", async function (event) {
                event.preventDefault();

                // Disable the submit button to prevent multiple submissions
                submitButton.disabled = true;

                const name = document.getElementById("name").value;
                const email = document.getElementById("email").value;
                const usernum = document.getElementById("usernum").value;
                const item_description = document.getElementById("item_description").value;
                const barcode = document.getElementById("barcode").value;
                const borrow_date = document.getElementById("borrow_date").value;
                const return_date = document.getElementById("return_date").value;

                try {
                    const response = await fetch("/indexborrowforms", {
                        method: "POST",
                        headers: {
                            "Content-Type": "application/json",
                        },
                        body: JSON.stringify({ name, email, usernum, item_description, barcode, borrow_date, return_date }),
                    });

                    if (response.ok) {
                        console.log("Success");

                        // Display the success message
                        const successMessage = document.getElementById("successMessage");
                        successMessage.style.display = "block";
                        successMessage.textContent = "Added";

                        // Hide the success message after 4 seconds
                        setTimeout(function () {
                            successMessage.style.display = "none";
                        }, 4000);

                        document.getElementById("notification").textContent = "";
                        borrowForm.reset();
                        setDefaultDateValues(); // Reset date values after submission
                    } else {
                        console.error("Failed to submit asset:", response.status, await response.json());
                        document.getElementById("notification").textContent = "Failed to submit asset.";
                    }
                } catch (error) {
                    console.error("Error during asset submission:", error);
                    document.getElementById("notification").textContent = "An error occurred.";
                } finally {
                    // Re-enable the submit button after the request is complete
                    submitButton.disabled = false;
                }
            });

            resetButton.addEventListener("click", function () {
                borrowForm.reset();
                document.getElementById("notification").textContent = "";
                setDefaultDateValues();
            });
        }

        history.pushState(null, null, document.URL);
        window.addEventListener('popstate', function () {
            history.pushState(null, null, document.URL);
        });
    });

    async function fetchItemDescription() {
        const barcode = document.getElementById("barcode").value;

        try {
            const response = await fetch(`/item_description?barcode=${barcode}`);
            
            if (!response.ok) {
                throw new Error(`HTTP error! Status: ${response.status}`);
            }

            const contentType = response.headers.get("content-type");
            if (contentType && contentType.includes("application/json")) {
                const data = await response.json();
                document.getElementById("item_description").value = data.description;
            } else {
                throw new Error("Response is not JSON");
            }
        } catch (error) {
            console.error('Error fetching item description:', error);
        }
    }
  </script>
</body>
</html>
